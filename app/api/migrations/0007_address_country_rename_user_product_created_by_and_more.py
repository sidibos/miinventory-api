# Generated by Django 4.2.16 on 2024-12-31 04:06

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0006_user_created_at_user_updated_at_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('address', models.CharField(max_length=255)),
                ('postcode', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=250)),
                ('code', models.CharField(max_length=5)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RenameField(
            model_name='product',
            old_name='user',
            new_name='created_by',
        ),
        migrations.RenameField(
            model_name='saleorder',
            old_name='user',
            new_name='customer_user',
        ),
        migrations.RemoveField(
            model_name='category',
            name='user',
        ),
        migrations.AddField(
            model_name='category',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='categories', to='api.user'),
        ),
        migrations.AlterField(
            model_name='saleorder',
            name='order_status',
            field=models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('dispatched', 'Dispatched'), ('complete', 'Complete'), ('cancelled', 'Cancelled')]),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('created_by',)},
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=250, null=True)),
                ('shop_name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('producer', 'Producer'), ('distributor', 'Distributor'), ('wholesaler', 'Wholesaler')])),
                ('photo', models.ImageField(upload_to='uploads/')),
                ('account_holder', models.CharField(max_length=255, null=True)),
                ('account_number', models.CharField(max_length=255, null=True)),
                ('short_code', models.CharField(max_length=255, null=True)),
                ('bank_name', models.CharField(max_length=255, null=True)),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='suppliers', to='api.address')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_suppliers', to='api.user')),
                ('main_contact', models.OneToOneField(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('order_status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('dispatched', 'Dispatched'), ('received', 'Received'), ('complete', 'Complete'), ('cancellled', 'Cancelled')])),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_purchase_orders', to='api.user')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='purchaseOrders', to='api.supplier')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='updated_purchase_orders', to='api.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='address',
            name='country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='addresses', to='api.country'),
        ),
        migrations.AddField(
            model_name='product',
            name='supplier',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='products', to='api.supplier'),
        ),
        migrations.AlterField(
            model_name='customer',
            name='address',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='customers', to='api.address'),
        ),
        migrations.CreateModel(
            name='SaleOrderDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.IntegerField()),
                ('unitcost', models.IntegerField()),
                ('total', models.IntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saleOrders', to='api.saleorder')),
                ('sale_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saleItems', to='api.saleorder')),
            ],
            options={
                'unique_together': {('sale_order', 'product')},
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.IntegerField()),
                ('unitcost', models.IntegerField()),
                ('total', models.IntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchaseOrders', to='api.purchaseorder')),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchaseItems', to='api.purchaseorder')),
            ],
            options={
                'unique_together': {('purchase_order', 'product')},
            },
        ),
    ]
